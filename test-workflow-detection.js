// Test the workflow detection and AI responses\n\n// Simulate user asking about workflows\nasync function testWorkflowQuestions() {\n  console.log('\ud83e\uddea Testing workflow detection and AI responses...');\n  \n  // Wait for everything to initialize\n  await new Promise(resolve => setTimeout(resolve, 3000));\n  \n  if (!window.n9nCopilot) {\n    console.error('\u274c n9nCopilot not found');\n    return;\n  }\n  \n  // Check if UI manager is available\n  if (!window.n9nCopilot.uiManager) {\n    console.error('\u274c UIManager not found');\n    return;\n  }\n  \n  const uiManager = window.n9nCopilot.uiManager;\n  \n  // Test workflow context retrieval\n  console.log('\ud83d\udd0d Testing workflow context...');\n  const context = await uiManager.getWorkflowContext();\n  console.log('\ud83d\udcca Workflow context:', context);\n  \n  // Test different AI responses\n  const testQueries = [\n    'What workflows do I have?',\n    'Show me my current workflows',\n    'Create a new workflow for email automation',\n    'Help me build a workflow'\n  ];\n  \n  for (const query of testQueries) {\n    console.log(`\\n\ud83d\udcac Testing query: \"${query}\"`);\n    try {\n      const response = await uiManager.generateAIResponse(query);\n      console.log('\ud83e\udd16 AI Response:', response.content.substring(0, 200) + '...');\n    } catch (error) {\n      console.error('\u274c Error:', error);\n    }\n  }\n  \n  // Test workflow detection directly\n  if (window.workflowDetector) {\n    console.log('\\n\ud83d\udd0d Testing workflow detector...');\n    const workflows = window.workflowDetector.getWorkflows();\n    console.log(`\ud83d\udccb Found ${workflows.length} workflows:`, workflows.map(w => w.name));\n    \n    const aiContext = window.workflowDetector.getWorkflowsForAI();\n    console.log('\ud83e\udd16 AI-formatted context:', aiContext);\n  }\n}\n\n// Run test\ntestWorkflowQuestions().catch(console.error);